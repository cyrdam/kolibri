@import '../@shared/mixins';
@import '../../styles/global';
@import '../legacy-input';
@import '../../styles/kol-alert-mixin';
@import '../../styles/kol-field-control-mixin';
@import '../../styles/kol-form-field-mixin';
@import '../../styles/kol-input-container-mixin';

@include kol-alert;
@include kol-field-control;
@include kol-form-field;
@include kol-input-container;

@layer kol-component {
	.kol-form-field {
		--border-width: #{rem(2)};
		--input-size: 1.5em;

		&__label {
			display: contents;
		}

		&__input {
			display: flex;
			flex-direction: column;

			&--orientation-horizontal {
				flex-direction: row;
				flex-wrap: wrap;
				align-items: flex-start;
			}
		}

		&--disabled {
			opacity: unset;
		}
	}

	.kol-input-radio {
		appearance: none;
		border-width: var(--border-width);
		border-style: solid;
		border-radius: 100%;
		cursor: pointer;
		display: flex;
		height: var(--input-size);
		margin: 0;
		min-height: var(--input-size);
		min-width: var(--input-size);
		padding: 0;
		width: var(--input-size);

		&:before {
			border-radius: 100%;
			content: '';
			margin: auto;
			height: calc(var(--input-size) / 2);
			width: calc(var(--input-size) / 2);
		}

		&:checked {
			&:before {
				background-color: #000;

				@media (forced-colors: active) {
					/* Give it a visible background in forced colors mode */
					background-color: selectedItem !important;
				}
			}
		}

		&:disabled {
			opacity: 0.5;
			cursor: not-allowed;
		}
	}
}
