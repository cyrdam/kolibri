@import './rem';
@import './focus-outline';

@mixin kol-button {
	.kol-button {
		:is(.kol-button__element):focus {
			outline: none;
			.kol-button__text {
				@include focus-outline;
			}
		}

		:is(.kol-button__element) {
			&.kol-button--hide-label {
				.kol-button__text {
					padding: rem(12.8);
					width: unset;
					.span-label {
						display: none;
					}
				}
			}
		}

		:is(.kol-button__element):hover,
		:is(.kol-button__element):active {
			.kol-button__text {
				box-shadow: none;
			}
		}

		:is(.kol-button__element).loading {
			.kol-button__text {
				.kol-icon {
					animation: spin 5s infinite linear;
				}
			}
		}
		&--primary {
			&:is(.kol-button__element) {
				.kol-button__text,
				&:disabled:hover > .kol-button__text {
					background-color: var(--color-primary);
					border-color: var(--color-primary);
					color: var(--color-light);
				}
			}
		}

		&--secondary,
		&--normal {
			&:is(.kol-button__element) {
				.kol-button__text,
				&:disabled:hover > .kol-button__text {
					background-color: var(--color-light);
					border-color: var(--color-primary);
					color: var(--color-primary);
				}
			}
		}

		&--danger {
			&:is(.kol-button__element) {
				.kol-button__text,
				&:disabled:hover > .kol-button__text {
					background-color: var(--color-danger);
					border-color: var(--color-danger);
					color: var(--color-light);
				}
			}
		}

		&--ghost {
			&:is(.kol-button__element) {
				.kol-button__text,
				&:disabled:hover > .kol-button__text {
					border-color: var(--color-light);
					background-color: var(--color-light);
					box-shadow: none;
					color: var(--color-primary);
				}
			}
		}

		/*-----------*/
		&--primary,
		&--secondary,
		&--normal,
		&--danger,
		&--ghost {
			&:is(.kol-button__element):hover,
			&:is(.kol-button__element):active {
				.kol-button__text {
					background-color: var(--color-primary-variant);
					border-color: var(--color-primary-variant);
					box-shadow: 0 rem(2) rem(8) rem(2) rgba(8, 35, 48, 0.24);
					color: var(--color-light);
				}
			}
		}

		&--danger {
			&:is(.kol-button__element):hover,
			&:is(.kol-button__element):active {
				.kol-button__text {
					background-color: var(--color-danger);
					border-color: var(--color-danger);
				}
			}
		}
		&--primary,
		&--secondary,
		&--normal,
		&--danger,
		&--ghost {
			&:is(.kol-button__element):active {
				.kol-button__text {
					border-color: var(--color-light);
					box-shadow: none;
					outline: none;
				}
			}
		}

		/** small ghost button */

		&--ghost {
			&:is(.kol-button__element) {
				.small {
					.kol-button__text {
						border: none;
						background-color: transparent;
						box-shadow: none;

						span {
							border-radius: 1.5em;
							border-style: solid;
							border-width: var(--border-width);
							border-color: var(--color-light);
							background-color: var(--color-light);
						}
					}
				}
			}
		}
		&--ghost {
			&:is(.kol-button__element) {
				.small {
					&:active > .kol-span-wc > span,
					&:hover,
					&.transparent:active,
					&.transparent:hover {
						.kol-button__text > span {
							background-color: var(--color-primary-variant);
							border-color: var(--color-primary-variant);
							box-shadow: 0 rem(2) rem(8) rem(2) rgba(8, 35, 48, 0.24);
							color: var(--color-light);
						}
					}
				}
			}
		}

		/** :is(a,button) with transparent background */
		:is(a, button),
		.ghost :is(a, button).small {
			&.transparent {
				.kol-button__text,
				.kol-button__text > span {
					background-color: transparent;
					border-color: transparent;
				}
			}
		}

		.badge-text-hint {
			background-color: var(--color-mute-variant);
			border-radius: rem(3);
			color: var(--color-text);
			padding: 0 0.3em;
		}
	}
}
