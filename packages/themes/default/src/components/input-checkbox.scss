@import '../mixins/rem';
@import '../mixins/focus-outline';
@import '../mixins/alert-wc';
@import '../mixins/typography';
@import '../@shared/input-core';
@import '../mixins/field-control';

@layer kol-theme-component {
	.kol-form-field {
		$root: &;

		&--disabled {
			#{$root}__input {
				outline: none;
				cursor: not-allowed;
			}
			#{$root}__label {
				cursor: not-allowed;
			}
		}
	}

	@include kol-field-control-theme;

	.kol-field-control {
		gap: rem(6.4);
	}

	.kol-checkbox {
		.kol-input {
			cursor: pointer;
			order: 1;
			width: 100%;
			border-color: var(--color-subtle);
			border-width: rem(2);
			border-style: solid;
			border-radius: var(--border-radius);
			@include kol-typography-body;

			appearance: none;
			background-color: white;
			cursor: pointer;
			transition: 0.5s;
			margin: 0;

			&:checked,
			&:indeterminate {
				background-color: var(--color-primary);
				border-color: var(--color-primary);
			}

			&:disabled {
				cursor: not-allowed;
			}

			&:focus {
				@include focus-outline;
			}

			&:focus:hover {
				box-shadow: none;
			}

			&:active {
				box-shadow: none;
			}

			&:hover {
				border-color: var(--color-primary);
				box-shadow: 0 rem(2) rem(8) rem(2) rgba(8, 35, 48, 0.24);
			}
		}

		&.kol-checkbox--disabled {
			opacity: 0.5;
		}
	}

	.kol-checkbox--variant-default {
		width: initial;
		min-width: initial;

		.kol-input {
			border-radius: var(--border-radius);
			height: calc(6 * rem(4));
			min-width: calc(6 * rem(4));
			width: calc(6 * rem(4));
		}

		.kol-icon {
			color: var(--color-light);
		}
	}

	.kol-checkbox--variant-switch {
		.kol-icon {
			width: 1.25em;
			height: 1.25em;
			left: rem(2);
		}

		.kol-input {
			background-color: var(--color-subtle);
			border-radius: 1.25em;
			border-width: 0;
			display: block;
			height: 1.5em;
			min-width: 3.5em;
			position: relative;
			width: 3.5em;
			/* Visible with forced colors  */
			outline: transparent solid rem(1);

			&:focus {
				@include switch-outline;
			}

			&:before {
				width: 1.25em;
				height: 1.25em;
				left: calc(0.25em - rem(2));
				top: calc(0.25em - rem(2));
				border-radius: 1.25em;
				background-color: white;
				position: absolute;
			}

			&:checked {
				background-color: var(--color-primary);
			}

			&:checked::before {
				transform: translateX(2em);
			}

			&:indeterminate::before {
				transform: translateX(1em);
			}
		}

		&.kol-checkbox--checked .kol-icon {
			transform: translate(2em, -50%);
		}

		&.kol-checkbox--indeterminate .kol-icon {
			transform: translate(1em, -50%);
		}
	}

	.kol-input-checkbox__field-control {
		$root: &;

		&--variant-button {
			gap: unset;

			& .kol-field-control {
				&__input,
				&__label {
					border-color: var(--color-primary);
					background-color: var(--color-light);
					color: var(--color-primary);
				}

				&__input {
					height: 100%;
					border-width: rem(1) 0 rem(1) rem(1);
					border-style: solid none solid solid;
					border-radius: var(--border-radius) 0 0 var(--border-radius);
				}

				&__label {
					border-width: rem(1) rem(1) rem(1) 0;
					border-style: solid solid solid none;
					border-radius: 0 var(--border-radius) var(--border-radius) 0;

					justify-self: stretch;
					align-self: stretch;
					display: flex;

					padding-right: rem(16);

					&-text {
						margin: auto auto;
						font-weight: 700;
					}
				}
			}

			&.kol-input-checkbox__field-control {
				&--indeterminate {
					& .kol-field-control {
						&__input,
						&__label {
							border-color: var(--color-primary);
							background-color: var(--color-mute);
							color: var(--color-primary);
						}
					}
				}

				&--checked {
					& .kol-field-control {
						&__input,
						&__label {
							border-color: var(--color-primary);
							background-color: var(--color-primary);
							color: var(--color-light);
						}
					}
				}
			}

			&:is(:active, :hover):not(.kol-field-control--disabled) {
				.kol-field-control {
					&__input,
					&__label {
						background-color: var(--color-primary-variant);
						border-color: var(--color-primary-variant);
						color: var(--color-light);
						box-shadow: 0 rem(2) rem(8) rem(2) rgba(8, 35, 48, 0.24);
					}
				}

				&:not(.kol-field-control--hide-label) {
					.kol-field-control {
						&__label {
							clip-path: inset(rem(-10) rem(-10) rem(-10) 0);
						}

						&__input {
							clip-path: inset(rem(-10) 0 rem(-10) rem(-10));
						}
					}
				}
			}

			&:focus-within {
				@include focus-outline;
			}

			&.kol-field-control {
				&--label-align-left {
					.kol-field-control {
						&__input {
							border-width: rem(1) rem(1) rem(1) 0;
							border-style: solid solid solid none;
							border-radius: 0 var(--border-radius) var(--border-radius) 0;
						}

						&__label {
							border-width: rem(1) 0 rem(1) rem(1);
							border-style: solid none solid solid;
							border-radius: var(--border-radius) 0 0 var(--border-radius);
						}
					}

					&:is(:active, :hover):not(.kol-field-control--disabled) {
						&:not(.kol-field-control--hide-label) {
							.kol-field-control {
								&__label {
									clip-path: inset(rem(-10) 0 rem(-10) rem(-10));
								}

								&__input {
									clip-path: inset(rem(-10) rem(-10) rem(-10) 0);
								}
							}
						}
					}
				}

				&--hide-label {
					.kol-field-control {
						&__input {
							border-width: rem(1);
							border-style: solid;
							border-radius: var(--border-radius);
						}
					}
				}

				&--disabled {
					.kol-field-control {
						&__input {
							opacity: 0.5;
							outline: none;
							cursor: not-allowed;
						}
						&__label {
							cursor: not-allowed;
						}
					}
				}
			}
		}
	}
}

$root: &;
$switch: &;
$button: &;

/**
	.kol-input-container {
		$root: &;

		min-height: var(--a11y-min-size);

		#{$root}__checkbox-container {
			min-width: initial;
			width: initial;
		}

		#{$root}__checkbox-input-element {
			cursor: pointer;
			order: 1;
			width: 100%;
			border-color: var(--color-subtle);
			border-width: rem(2);
			border-style: solid;
			border-radius: var(--border-radius);
			@include kol-typography-body;

			&:focus {
				@include focus-outline;
			}

			&:focus:hover {
				box-shadow: none;
			}

			&:active {
				box-shadow: none;
			}

			&[type='checkbox'] {
				appearance: none;
				background-color: white;
				cursor: pointer;
				transition: 0.5s;
				margin: 0;

				&:checked {
					background-color: var(--color-primary);
					border-color: var(--color-primary);
				}
			}

			&:hover {
				border-color: var(--color-primary);
				box-shadow: 0 rem(2) rem(8) rem(2) rgba(8, 35, 48, 0.24);
			}
		}

		&--variant {
			
			&-default {
				#{$root}__checkbox-input-element {
					&[type='checkbox'] {
						border-radius: var(--border-radius);
						height: calc(6 * rem(4));
						min-width: calc(6 * rem(4));
						width: calc(6 * rem(4));
					}
				}

				#{$root}__checkbox-icon {
					color: var(--color-light);
				}
			}

			&-switch {
				$switch: &;

				#{$root}__checkbox-input-element {
					&[type='checkbox'] {
						background-color: var(--color-subtle);
						border-radius: 1.25em;
						border-width: 0;
						display: block;
						height: 1.5em;
						min-width: 3.5em;
						position: relative;
						width: 3.5em;
						outline: transparent solid rem(1);

						&:focus {
							@include switch-outline;
						}

						&:before {
							width: 1.25em;
							height: 1.25em;
							left: calc(0.25em - rem(2));
							top: calc(0.25em - rem(2));
							border-radius: 1.25em;
							background-color: white;
							position: absolute;
						}

						&:checked {
							background-color: var(--color-primary);
						}

						&:checked::before {
							transform: translateX(2em);
						}

						&:indeterminate::before {
							transform: translateX(1em);
						}
					}
				}

				#{$root}__checkbox-icon {
					width: 1.25em;
					height: 1.25em;
					left: rem(2);
				}

				@at-root #{$root}--checked#{$switch} #{$root}__checkbox-icon {
					transform: translate(2em, -50%);
				}

				@at-root #{$root}--indeterminate#{$switch} #{$root}__checkbox-icon {
					transform: translate(1em, -50%);
				}
			}
		}
	}

	.kol-input-checkbox {
		$root: &;

		&--variant {
			
			&-button {
				$button: &;

				column-gap: 0;
				border: none;

				.kol-form-field {
					&__input,
					&__label {
						border-color: var(--color-primary);
						background-color: var(--color-light);
						color: var(--color-primary);
					}

					&__input {
						height: 100%;
						border-width: rem(1) 0 rem(1) rem(1);
						border-style: solid none solid solid;
						border-radius: var(--border-radius) 0 0 var(--border-radius);
					}

					&__label {
						border-width: rem(1) rem(1) rem(1) 0;
						border-style: solid solid solid none;
						border-radius: 0 var(--border-radius) var(--border-radius) 0;

						justify-self: stretch;
						align-self: stretch;
						display: flex;

						padding-right: rem(16);

						&-text {
							margin: auto auto;
							font-weight: 700;
						}
					}
				}

				@at-root #{$root}--indeterminate#{$button} .kol-form-field {
					&__input,
					&__label {
						border-color: var(--color-primary);
						background-color: var(--color-mute);
						color: var(--color-primary);
					}
				}

				@at-root #{$root}--checked#{$button} .kol-form-field {
					&__input,
					&__label {
						border-color: var(--color-primary);
						background-color: var(--color-primary);
						color: var(--color-light);
					}
				}

				@at-root #{$button}:is(:active, :hover):not(.kol-form-field--disabled) {
					.kol-form-field {
						&__input,
						&__label {
							background-color: var(--color-primary-variant);
							border-color: var(--color-primary-variant);
							color: var(--color-light);
							box-shadow: 0 rem(2) rem(8) rem(2) rgba(8, 35, 48, 0.24);
						}
					}

					&:not(.kol-form-field--hide-label) {
						.kol-form-field {
							&__label {
								clip-path: inset(rem(-10) rem(-10) rem(-10) 0);
							}

							&__input {
								clip-path: inset(rem(-10) 0 rem(-10) rem(-10));
							}
						}
					}
				}

				@at-root #{$button}:focus-within {
					@include focus-outline;
				}

				@at-root #{$root}--label-align-left#{$button} {
					.kol-form-field__input {
						border-width: rem(1) rem(1) rem(1) 0;
						border-style: solid solid solid none;
						border-radius: 0 var(--border-radius) var(--border-radius) 0;
					}

					.kol-form-field__label {
						border-width: rem(1) 0 rem(1) rem(1);
						border-style: solid none solid solid;
						border-radius: var(--border-radius) 0 0 var(--border-radius);
					}

					&:is(:active, :hover):not(.kol-form-field--disabled) {
						&:not(.kol-form-field--hide-label) {
							.kol-form-field {
								&__label {
									clip-path: inset(rem(-10) 0 rem(-10) rem(-10));
								}

								&__input {
									clip-path: inset(rem(-10) rem(-10) rem(-10) 0);
								}
							}
						}
					}
				}

				@at-root .kol-form-field--hide-label#{$button} {
					.kol-form-field__input {
						border-width: rem(1);
						border-style: solid;
						border-radius: var(--border-radius);
					}
				}
			}
		}
	}
**/
